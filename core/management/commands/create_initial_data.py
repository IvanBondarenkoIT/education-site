from django.core.management.base import BaseCommand
from core.models import Language


class Command(BaseCommand):
    help = '–°–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–∞–π—Ç–∞'

    def handle(self, *args, **options):
        self.stdout.write('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')
        
        # –°–æ–∑–¥–∞–µ–º —è–∑—ã–∫–∏
        languages_data = [
            {
                'code': 'ru',
                'name': '–†—É—Å—Å–∫–∏–π',
                'flag_icon': 'üá∑üá∫',
                'is_active': True,
                'is_default': True,
                'order': 1
            },
            {
                'code': 'uk',
                'name': '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞',
                'flag_icon': 'üá∫üá¶',
                'is_active': True,
                'is_default': False,
                'order': 2
            },
            {
                'code': 'en',
                'name': 'English',
                'flag_icon': 'üá¨üáß',
                'is_active': True,
                'is_default': False,
                'order': 3
            },
            {
                'code': 'ge',
                'name': '·É•·Éê·É†·Éó·É£·Éö·Éò',
                'flag_icon': 'üá¨üá™',
                'is_active': True,
                'is_default': False,
                'order': 4
            }
        ]
        
        for lang_data in languages_data:
            language, created = Language.objects.get_or_create(
                code=lang_data['code'],
                defaults=lang_data
            )
            if created:
                self.stdout.write(
                    self.style.SUCCESS(f'–°–æ–∑–¥–∞–Ω —è–∑—ã–∫: {language.name}')
                )
            else:
                self.stdout.write(
                    self.style.WARNING(f'–Ø–∑—ã–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {language.name}')
                )
        
        self.stdout.write(
            self.style.SUCCESS('–ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
        )
